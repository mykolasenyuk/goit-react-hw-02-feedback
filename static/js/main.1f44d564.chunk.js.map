{"version":3,"sources":["components/FeedbackOptions/FeedbackOptions.jsx","components/Statistics/Statistics.jsx","components/Section/Section.jsx","components/Notification/Notification.jsx","components/Feedback.jsx","App.js","index.js","components/Statistics/Statistics.module.css","components/FeedbackOptions/FeedbackOption.module.css","components/Section/Section.module.css"],"names":["FeedbackOptions","options","onLeaveFeedback","btns","Object","keys","className","s","map","btn","index","type","onClick","Statistics","good","neutral","bad","total","positiveFeedPercentage","feed","feedType","Section","title","children","section","Notification","message","Feedback","state","btnIncrement","evt","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","this","totalFeedback","Component","App","ReactDOM","render","document","querySelector","module","exports"],"mappings":"2OAsBeA,EAlBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAC5BC,EAAOC,OAAOC,KAAKJ,GAEzB,OACE,qBAAKK,UAAWC,IAAEJ,KAAlB,SACGA,EAAKK,KAAI,SAACC,EAAKC,GAAN,OACR,wBACEJ,UAAWC,IAAEE,IAEbE,KAAK,SACLC,QAAS,kBAAMV,EAAgBO,IAJjC,SAMGA,GAJIC,S,gBCgBAG,EAxBI,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,uBAA9B,OACjB,sBAAKZ,UAAWC,IAAEY,KAAlB,UACE,uBAAMb,UAAWC,IAAEa,SAAnB,mBAAoCN,KAEpC,uBAAMR,UAAWC,IAAEa,SAAnB,uBAAwCL,KAExC,uBAAMT,UAAWC,IAAEa,SAAnB,mBAAoCJ,KAEpC,uBAAMV,UAAWC,IAAEa,SAAnB,qBAAsCH,KAEtC,uBAAMX,UAAWC,IAAEa,SAAnB,gCACsBN,EAAO,EAAII,EAAyB,IAD1D,W,gBCFWG,EATC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,0BAASjB,UAAWC,IAAEiB,QAAtB,UACE,oBAAIlB,UAAWC,IAAEe,MAAjB,SAAyBA,IACxBC,MCDQE,EAJM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,4BAAIA,KC2DEC,E,4MAvDbC,MAAQ,CACNd,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPa,aAAe,SAAAC,GACb,EAAKC,UAAS,SAAAC,GACZ,OAAO,eACJF,EAAME,EAAUF,GAAO,O,EAK9BG,mBAAqB,SAACnB,EAAMC,EAASC,GAAhB,OAAwBF,EAAOC,EAAUC,G,EAE9DkB,gCAAkC,SAACpB,EAAMC,EAASC,GAAhB,OAChCmB,KAAKC,MAAc,IAAPtB,EAAc,EAAKmB,mBAAmBnB,EAAMC,EAASC,K,4CAEnE,WACE,MAA+BqB,KAAKT,MAA5Bd,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACjBsB,EAAgBD,KAAKJ,mBAAmBnB,EAAME,EAAKD,GACnDG,EAAyBmB,KAAKH,gCAClCpB,EACAC,EACAC,GAGF,OACE,gCACE,cAAC,EAAD,CAASM,MAAM,6BAAf,SACE,cAAC,EAAD,CACErB,QAASoC,KAAKT,MACd1B,gBAAiBmC,KAAKR,iBAI1B,cAAC,EAAD,CAASP,MAAM,aAAf,SACGgB,EAAgB,EACf,cAAC,EAAD,CACExB,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOqB,EACPpB,uBAAwBA,IAG1B,cAAC,EAAD,CAAcQ,QAAQ,+B,GAhDXa,aCERC,EAJH,WACV,OAAO,cAAC,EAAD,KCATC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,cAAc,W,kBCJhDC,EAAOC,QAAU,CAAC,SAAW,6BAA6B,KAAO,2B,kBCAjED,EAAOC,QAAU,CAAC,KAAO,6BAA6B,IAAM,8B,kBCA5DD,EAAOC,QAAU,CAAC,SAAW,0BAA0B,QAAU,yBAAyB,MAAQ,0B","file":"static/js/main.1f44d564.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './FeedbackOption.module.css';\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n  const btns = Object.keys(options);\r\n  // console.log(Object.keys(options));\r\n  return (\r\n    <div className={s.btns}>\r\n      {btns.map((btn, index) => (\r\n        <button\r\n          className={s.btn}\r\n          key={index}\r\n          type=\"button\"\r\n          onClick={() => onLeaveFeedback(btn)}\r\n        >\r\n          {btn}\r\n        </button>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\nexport default FeedbackOptions;\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.object.isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Statistics.module.css';\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positiveFeedPercentage }) => (\r\n  <div className={s.feed}>\r\n    <span className={s.feedType}>Good: {good}</span>\r\n\r\n    <span className={s.feedType}> Neutral: {neutral}</span>\r\n\r\n    <span className={s.feedType}> Bad: {bad}</span>\r\n\r\n    <span className={s.feedType}> Total: {total}</span>\r\n\r\n    <span className={s.feedType}>\r\n      Positive feedback: {good > 0 ? positiveFeedPercentage : '0'}%\r\n    </span>\r\n  </div>\r\n);\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number,\r\n};\r\n\r\nexport default Statistics;\r\n","import PropTypes from 'prop-types';\r\nimport s from './Section.module.css';\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <section className={s.section}>\r\n      <h2 className={s.title}>{title}</h2>\r\n      {children}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Section;\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n};\r\n","import PropTypes from 'prop-types';\r\n\r\nconst Notification = ({ message }) => {\r\n  return <p>{message}</p>;\r\n};\r\n\r\nexport default Notification;\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n","import React, { Component } from 'react';\r\nimport FeedbackOptions from './FeedbackOptions';\r\nimport Statistics from './Statistics/Statistics';\r\nimport Section from './Section';\r\nimport Notification from './Notification';\r\n\r\nclass Feedback extends Component {\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n  };\r\n\r\n  btnIncrement = evt => {\r\n    this.setState(prevState => {\r\n      return {\r\n        [evt]: prevState[evt] + 1,\r\n      };\r\n    });\r\n  };\r\n\r\n  countTotalFeedback = (good, neutral, bad) => good + neutral + bad;\r\n\r\n  countPositiveFeedbackPercentage = (good, neutral, bad) =>\r\n    Math.round((good * 100) / this.countTotalFeedback(good, neutral, bad));\r\n\r\n  render() {\r\n    const { good, neutral, bad } = this.state;\r\n    const totalFeedback = this.countTotalFeedback(good, bad, neutral);\r\n    const positiveFeedPercentage = this.countPositiveFeedbackPercentage(\r\n      good,\r\n      neutral,\r\n      bad,\r\n    );\r\n\r\n    return (\r\n      <div>\r\n        <Section title=\"Please leave your feedback\">\r\n          <FeedbackOptions\r\n            options={this.state}\r\n            onLeaveFeedback={this.btnIncrement}\r\n          />\r\n        </Section>\r\n\r\n        <Section title=\"Statictics\">\r\n          {totalFeedback > 0 ? (\r\n            <Statistics\r\n              good={good}\r\n              neutral={neutral}\r\n              bad={bad}\r\n              total={totalFeedback}\r\n              positiveFeedPercentage={positiveFeedPercentage}\r\n            />\r\n          ) : (\r\n            <Notification message=\"No feedback given\" />\r\n          )}\r\n        </Section>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Feedback;\r\n","import React from 'react';\n\nimport Feedback from './components/Feedback';\n\nconst App = () => {\n  return <Feedback />;\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.querySelector('#root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"feedType\":\"Statistics_feedType__ysqmK\",\"feed\":\"Statistics_feed__35lSH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btns\":\"FeedbackOption_btns__39G0B\",\"btn\":\"FeedbackOption_btn__1h5k7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gradient\":\"Section_gradient__3EoSL\",\"section\":\"Section_section__3oebR\",\"title\":\"Section_title__qJ4qk\"};"],"sourceRoot":""}